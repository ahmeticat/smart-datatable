{"version":3,"file":"rollup.js","sourceRoot":"","sources":["../../../src/lib/flatten/rollup.ts"],"names":[],"mappings":"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","sourcesContent":["import * as rollup from 'rollup';\nimport * as nodeResolve from 'rollup-plugin-node-resolve';\nimport * as sourcemaps from 'rollup-plugin-sourcemaps';\nimport * as commonJs from 'rollup-plugin-commonjs';\nimport * as rollupJson from 'rollup-plugin-json';\nimport * as log from '../util/log';\nimport { ExternalModuleIdStrategy, DependencyList } from './external-module-id-strategy';\nimport { umdModuleIdStrategy } from './umd-module-id-strategy';\nimport { TransformHook } from 'rollup';\nimport { ensureUnixPath } from '../util/path';\n\n/**\n * Options used in `ng-packagr` for writing flat bundle files.\n *\n * These options are passed through to rollup.\n */\nexport interface RollupOptions {\n  moduleName: string;\n  entry: string;\n  format: rollup.ModuleFormat;\n  dest: string;\n  sourceRoot: string;\n  umdModuleIds?: { [key: string]: string };\n  amd?: { id: string };\n  transform?: TransformHook;\n  dependencyList?: DependencyList;\n}\n\n/** Runs rollup over the given entry file, writes a bundle file. */\nexport async function rollupBundleFile(opts: RollupOptions): Promise<void> {\n  log.debug(`rollup (v${rollup.VERSION}) ${opts.entry} to ${opts.dest} (${opts.format})`);\n\n  const externalModuleIdStrategy = new ExternalModuleIdStrategy(opts.format, opts.dependencyList);\n\n  // Create the bundle\n  const bundle = await rollup.rollup({\n    context: 'this',\n    external: moduleId => externalModuleIdStrategy.isExternalDependency(moduleId),\n    inlineDynamicImports: false,\n    input: opts.entry,\n    plugins: [\n      rollupJson(),\n      // @ts-ignore\n      nodeResolve(),\n      // @ts-ignore\n      commonJs(),\n      sourcemaps(),\n      { transform: opts.transform },\n    ],\n    onwarn: warning => {\n      if (typeof warning === 'string') {\n        log.warn(warning);\n      } else {\n        if (warning.code === 'THIS_IS_UNDEFINED') {\n          return;\n        }\n\n        log.warn(warning.message);\n      }\n    },\n    preserveSymlinks: true,\n    // Disable treeshaking when generating bundles\n    // see: https://github.com/angular/angular/pull/32069\n    treeshake: false,\n  });\n\n  // Output the bundle to disk\n  await bundle.write({\n    name: opts.moduleName,\n    format: opts.format,\n    amd: opts.amd,\n    file: opts.dest,\n    banner: '',\n    globals: moduleId => umdModuleIdStrategy(moduleId, opts.umdModuleIds || {}),\n    sourcemap: true,\n    sourcemapPathTransform: (sourcePath: string) => {\n      sourcePath = ensureUnixPath(sourcePath);\n      // relocate sourcemaps\n      if (!sourcePath) {\n        return sourcePath;\n      }\n\n      // the replace here is because during the compilation one of the `/` gets lost sometimes\n      const sourceRoot = ensureUnixPath(opts.sourceRoot);\n      const mapRootUrl = sourceRoot.replace('//', '/');\n      if (sourcePath.indexOf(mapRootUrl) >= 0) {\n        return `${sourceRoot}${sourcePath.substr(sourcePath.indexOf(mapRootUrl) + mapRootUrl.length)}`;\n      } else if (sourcePath.indexOf(sourceRoot) >= 0) {\n        return sourcePath.substr(sourcePath.indexOf(mapRootUrl));\n      } else {\n        return sourcePath;\n      }\n    },\n  });\n}\n"]}