{"version":3,"file":"write-bundles.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-v5/entry-point/write-bundles.transform.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,8CAAgD;AAChD,+BAAiD;AAEjD,mDAAkG;AAElG,oCAAgF;AAChF,sCAAsC;AAItC,4CAA0C;AAE7B,QAAA,qBAAqB,GAAc,WAAI,CAClD,qBAAS,CAAC,KAAK,CAAC,EAAE;IAChB,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,8BAAsB,EAAE,CAAmB,CAAC;IAC1E,MAAM,EAAE,gBAAgB,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC;IAEjF,sCAAsC;IACtC,MAAM,gBAAgB,GAAG,UAAU;SAChC,MAAM,CAAC,oBAAY,CAAC;SACpB,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;SAC7B,MAAM,CAAC,CAAC,IAAI,EAAE,EAAgB,EAAE,EAAE;QACjC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;QAE7B,OAAO,IAAI,CAAC;IACd,CAAC,EAAE,EAAE,CAAC,CAAC;IAET,MAAM,IAAI,GAAgB;QACxB,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE,EAAE;QACb,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,UAAU;QACvC,cAAc,EAAE,YAAY,CAAC,cAAc;QAC3C,WAAW,EAAE,YAAY,CAAC,QAAQ;QAClC,WAAW,EAAE,YAAY,CAAC,KAAK;QAC/B,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,YAAY,oBACP,YAAY,CAAC,YAAY,EACzB,gBAAgB,CACpB;QACD,cAAc,EAAE,yBAAyB,CAAC,KAAK,CAAC;KACjD,CAAC;IAEF,OAAO,WAAW,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1F,CAAC,CAAC,CACH,CAAC;AAEF,SAAe,oBAAoB,CAAC,gBAAkC,EAAE,IAAiB;;QACvF,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,gBAAgB,CAAC;QAE9E,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACjC,MAAM,uBAAa,mBACd,IAAI,IACP,SAAS,EAAE,OAAO,EAClB,QAAQ,EAAE,QAAQ,IAClB,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC9B,MAAM,uBAAa,mBACd,IAAI,IACP,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,KAAK,IACf,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5B,MAAM,sBAAY,mBACb,IAAI,IACP,SAAS,EAAE,KAAK,EAChB,QAAQ,EAAE,GAAG,EACb,cAAc,EAAE,IAAI,CAAC,cAAc,IACnC,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACjC,MAAM,yBAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC1C,CAAC;CAAA;AAED,+DAA+D;AAC/D,SAAS,yBAAyB,CAAC,KAAiB;IAClD,yDAAyD;IACzD,+EAA+E;IAC/E,qFAAqF;IAErF,MAAM,cAAc,GAAmB;QACrC,YAAY,EAAE,EAAE;QAChB,mBAAmB,EAAE,EAAE;KACxB,CAAC;IAEF,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,oBAAY,CAAC,EAAE;QAC9C,MAAM,EAAE,mBAAmB,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,EAAE,gBAAgB,GAAG,EAAE,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QACjH,cAAc,CAAC,mBAAmB,GAAG,cAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC5G,cAAc,CAAC,YAAY,GAAG,cAAM,CAClC,cAAc,CAAC,YAAY,CAAC,MAAM,CAChC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EACzB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAC7B,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAC/B,CACF,CAAC;KACH;IAED,IAAI,cAAc,CAAC,mBAAmB,CAAC,MAAM,EAAE;QAC7C,GAAG,CAAC,IAAI,CACN,4GAA4G;YAC1G,IAAI;YACJ,+DAA+D,CAClE,CAAC;KACH;IAED,OAAO,cAAc,CAAC;AACxB,CAAC","sourcesContent":["import { map, switchMap } from 'rxjs/operators';\nimport { from as fromPromise, pipe } from 'rxjs';\nimport { Transform } from '../../brocc/transform';\nimport { FlattenOpts, flattenToFesm, flattenToUmd, flattenToUmdMin } from '../../flatten/flatten';\nimport { NgEntryPoint } from '../../ng-package-format/entry-point';\nimport { isEntryPoint, isEntryPointInProgress, EntryPointNode } from '../nodes';\nimport * as log from '../../util/log';\nimport { DestinationFiles } from '../../ng-package-format/shared';\nimport { BuildGraph } from '../../brocc/build-graph';\nimport { DependencyList } from '../../flatten/external-module-id-strategy';\nimport { unique } from '../../util/array';\n\nexport const writeBundlesTransform: Transform = pipe(\n  switchMap(graph => {\n    const entryPoint = graph.find(isEntryPointInProgress()) as EntryPointNode;\n    const { destinationFiles, entryPoint: ngEntryPoint, tsConfig } = entryPoint.data;\n\n    // Add UMD module IDs for dependencies\n    const dependencyUmdIds = entryPoint\n      .filter(isEntryPoint)\n      .map(ep => ep.data.entryPoint)\n      .reduce((prev, ep: NgEntryPoint) => {\n        prev[ep.moduleId] = ep.umdId;\n\n        return prev;\n      }, {});\n\n    const opts: FlattenOpts = {\n      destFile: '',\n      entryFile: '',\n      sourceRoot: tsConfig.options.sourceRoot,\n      flatModuleFile: ngEntryPoint.flatModuleFile,\n      esmModuleId: ngEntryPoint.moduleId,\n      umdModuleId: ngEntryPoint.umdId,\n      amdId: ngEntryPoint.amdId,\n      umdModuleIds: {\n        ...ngEntryPoint.umdModuleIds,\n        ...dependencyUmdIds,\n      },\n      dependencyList: getDependencyListForGraph(graph),\n    };\n\n    return fromPromise(writeFlatBundleFiles(destinationFiles, opts)).pipe(map(() => graph));\n  }),\n);\n\nasync function writeFlatBundleFiles(destinationFiles: DestinationFiles, opts: FlattenOpts): Promise<void> {\n  const { esm2015, fesm2015, esm5, fesm5, umd, umdMinified } = destinationFiles;\n\n  log.info('Bundling to FESM2015');\n  await flattenToFesm({\n    ...opts,\n    entryFile: esm2015,\n    destFile: fesm2015,\n  });\n\n  log.info('Bundling to FESM5');\n  await flattenToFesm({\n    ...opts,\n    entryFile: esm5,\n    destFile: fesm5,\n  });\n\n  log.info('Bundling to UMD');\n  await flattenToUmd({\n    ...opts,\n    entryFile: fesm5,\n    destFile: umd,\n    dependencyList: opts.dependencyList,\n  });\n\n  log.info('Minifying UMD bundle');\n  await flattenToUmdMin(umd, umdMinified);\n}\n\n/** Get all list of dependencies for the entire 'BuildGraph' */\nfunction getDependencyListForGraph(graph: BuildGraph): DependencyList {\n  // We need to do this because if A dependecy on bundled B\n  // And A has a secondary entry point A/1 we want only to bundle B if it's used.\n  // Also if A/1 depends on A we don't want to bundle A thus we mark this a dependency.\n\n  const dependencyList: DependencyList = {\n    dependencies: [],\n    bundledDependencies: [],\n  };\n\n  for (const entry of graph.filter(isEntryPoint)) {\n    const { bundledDependencies = [], dependencies = {}, peerDependencies = {} } = entry.data.entryPoint.packageJson;\n    dependencyList.bundledDependencies = unique(dependencyList.bundledDependencies.concat(bundledDependencies));\n    dependencyList.dependencies = unique(\n      dependencyList.dependencies.concat(\n        Object.keys(dependencies),\n        Object.keys(peerDependencies),\n        entry.data.entryPoint.moduleId,\n      ),\n    );\n  }\n\n  if (dependencyList.bundledDependencies.length) {\n    log.warn(\n      `Inlining of 'bundledDependencies' has been deprecated in version 5 and will be removed in future versions.` +\n        '\\n' +\n        `List the depedency in the 'peerDependencies' section instead.`,\n    );\n  }\n\n  return dependencyList;\n}\n"]}